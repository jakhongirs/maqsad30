# Generated by Django 5.1.6 on 2025-03-06 12:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("main", "0011_userchallenge_is_active"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="tournament",
            name="award_icon",
            field=models.ImageField(
                blank=True,
                null=True,
                upload_to="tournament_award_icons/",
                verbose_name="Award Icon",
            ),
        ),
        migrations.AddField(
            model_name="tournament",
            name="start_date",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="Start Date"
            ),
        ),
        migrations.AddField(
            model_name="useraward",
            name="challenge_award",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_awards",
                to="main.challengeaward",
            ),
        ),
        migrations.AlterField(
            model_name="tournament",
            name="finish_date",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="Finish Date"
            ),
        ),
        migrations.CreateModel(
            name="TournamentAward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "tournament",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="award",
                        to="main.tournament",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tournament Award",
                "verbose_name_plural": "Tournament Awards",
            },
        ),
        migrations.AlterUniqueTogether(
            name="useraward",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="useraward",
            name="tournament_award",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_awards",
                to="main.tournamentaward",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="useraward",
            unique_together={("user", "challenge_award"), ("user", "tournament_award")},
        ),
        migrations.CreateModel(
            name="UserTournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "consecutive_failures",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Consecutive failures"
                    ),
                ),
                (
                    "total_failures",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Total failures"
                    ),
                ),
                (
                    "is_failed",
                    models.BooleanField(default=False, verbose_name="Is failed"),
                ),
                (
                    "started_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Started at"),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_tournaments",
                        to="main.tournament",
                        verbose_name="Tournament",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_tournaments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Tournament",
                "verbose_name_plural": "User Tournaments",
                "unique_together": {("user", "tournament")},
            },
        ),
        migrations.RemoveField(
            model_name="useraward",
            name="award",
        ),
        migrations.CreateModel(
            name="UserTournamentDay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("date", models.DateField(verbose_name="Date")),
                (
                    "is_completed",
                    models.BooleanField(default=False, verbose_name="Is completed"),
                ),
                (
                    "completed_challenges",
                    models.ManyToManyField(
                        related_name="tournament_day_completions",
                        to="main.challenge",
                        verbose_name="Completed Challenges",
                    ),
                ),
                (
                    "user_tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_records",
                        to="main.usertournament",
                        verbose_name="User Tournament",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Tournament Day",
                "verbose_name_plural": "User Tournament Days",
                "ordering": ["-date"],
                "unique_together": {("user_tournament", "date")},
            },
        ),
    ]
